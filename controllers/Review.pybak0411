#coding:utf-8
import sys
import os.path
import tornado.web
import tornado.ioloop
import os
import re
import ConfigParser
import MySQL
import ReviewPart

reload(sys)
sys.setdefaultencoding("utf8")

l = []

class LoadAndClean():
	def find_Load(self):
		for file in os.listdir("tmp/"):
          		self.SqlTextIn="tmp/"+file
            		MySQL.MysqlLoad().loadin(self.SqlTextIn)

	def del_tmp_file(self,tb):
		for file in os.listdir("tmp"):
			if file:
				SqlTextIn="tmp/"+file
				os.remove(SqlTextIn)
			else:
				pass
		tb_d = ['DB_REVIEW',"%s" %(tb)]
		tb_del = '.'.join(tb_d)
		tb_b = ['DB_REVIEW_BAK',"%s" %(tb)]
		tb_bak = '.'.join(tb_b)
		MySQL.MysqlQuery().query_update('drop table if exists %s' %(tb_bak))
		MySQL.MysqlQuery().query_update('rename table %s to %s' %(tb_del,tb_bak)) 
		MySQL.MysqlQuery().query_update('drop table if exists %s' %(tb_del)) 



class Review(tornado.web.RequestHandler):
	def get(self):
		self.render('review.html',title='result_test',items=l)

	def post(self):
                upload_path = os.path.join(os.path.dirname(__file__),'../tmp')  
		file_me = self.get_argument('file')
		print file_me
		try:
                	file_metas = self.request.files['file']   
                	for meta in file_metas:
                        	filename = meta['filename']
                        	filepath = os.path.join(upload_path,filename)
                        	with open(filepath,'wb') as up:      
                                	up.write(meta['body'])
			l = []
		except Exception,ex:
			print Exception,ex
			l = ['nofile']
			self.render('review.html',title='result_test',items=l)
		LoadAndClean().find_Load()
		max_id = MySQL.MysqlQuery().query_select('select max(id) from DB_REVIEW_CONTROL.tb_review_result')[0][0]
		tb_name = MySQL.MysqlQuery().query_select('show tables from %s' %(MySQL.db))
		if tb_name:
			pass;
		else:
			l = ["load err"]
			try:
				self.render('review.html',title='result_test',items=l)
			except Exception,ex:
				print Exception,ex
		for tb_tup in tb_name:
			tb = "".join(tuple(tb_tup))
			ReviewPart.ReviewPart().review_table(MySQL.db,tb)
			ReviewPart.ReviewPart().review_column(MySQL.db,tb)	
		rs_info = MySQL.MysqlQuery().query_select('select result from DB_REVIEW_CONTROL.tb_review_result where id > %s' %(max_id))
		if rs_info:
			for rs in rs_info:
				l.append(rs[0])
			try:
				self.render('review.html',title='result_test',items=l)
			except Exception,ex:
				print Exception,ex
		else:
			l = ['审核成功，sql无错']
			try:
				self.render('review.html',title='result_test',items=l)
			except Exception,ex:
                                print Exception,ex
			l = []
		for tb_del in tb_name:
			LoadAndClean().del_tmp_file(tb_del[0])
		l = []
		
